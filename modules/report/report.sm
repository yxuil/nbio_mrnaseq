rule versions:
    output: "tmp/software_version.txt"
    params: mem = "1G"
    shell: """
        {SKEWER} -v | head -1 > {output}
        {STAR} --version | head -1 >> {output}
        {SAMTOOLS} 2>&1 | head -3 | tail -1 >> {output}
        {RSEM}/rsem-calculate-expression -v  | head -1 >> {output}
        {BOWTIE}/bowtie --version  | head -1 >> {output}
        {FEATCOUNT}/featureCounts -v 2>&1 | head -1 >> {output}
    """

curdir = srcdir(".")
def report_input(wc):
    required_input = [ "trimmed_fq/trim_stat.html",
                       "QC_graphs/qc_table.html",
                       "alignments/alignment_stat.html",
                       "expression/exp_report.html",
                       "diff_expr/de_report.html",
                       "tmp/software_version.txt" ]
    if "pathway_exe" in config:
        required_input.append("pathway/pathway_report.html")

    return required_input

rule report:
    input:  report_input
    output:
        html = "report.html",
        project = "report/project.html",
        css  = "report/CSS/report.css",
        png  = "report/workflow.png"
    log: "tmp/shell_log/report.log"
    params:
        mem="1G",
        report_dir="report"
    shell: """
        {curdir}/report.py {config_fn}
        cp {curdir}/workflow.png {output.png}
        cp -r {curdir}/CSS {params.report_dir}
        cp -r {curdir}/JS {params.report_dir}
        cp {curdir}/redirect.html {output.html}
        """

