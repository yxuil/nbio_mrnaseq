/* Base styles */

.site-title {
	margin-bottom: 0;
}
.main-menu {
	padding: .4em 1em;
	color: white;
	background: hsl(0, 0%, 20%);
}

.result-content {
	padding: 0 1.4em 1.4em;
}

.sidebar {
	padding: .5em 1.4em 3em;
	background: hsl(0, 0%, 90%);
    overflow: hidden;
}

.example-menu {
    padding-bottom: 1em;
}

.example-menu ul {
	list-style-type: none;
	margin: 0;
	padding: 0;
}

.example-menu a {
	display: block;
	padding: .4em 0;
	color: inherit;
	text-decoration: none;
	transition: all 0.5s ease;
}

.example-menu a:hover,
.example-menu a:focus {
	padding: .4em 1em;
	background: hsl(0, 0%, 20%);
	color: white;
}

.footer-area {
	padding: .4em 1em;
	text-align: center;
	background: hsl(0, 0%, 75%);
}

/* Sidebar switcher buttons */

@media screen and (max-width: 50em) {
    /* Hide switcher on small screens */
    .sidebar-switcher {
        display: none;
    }
}

@media screen and (min-width: 50em) {

	.sidebar-switcher {
		position: absolute;
		right: 0;
		padding: .4em 1em;
		color: hsl(0, 0%, 40%);
	}

	.sidebar-switcher a {
		color: hsl(0, 0%, 40%);
		padding-left: .4em;
	}

	.sidebar-switcher a:hover,
	.sidebar-switcher a:focus {
		color: hsl(0, 0%, 20%);
	}
}

/* Flexbox stuff */

@media screen and (min-width: 50em) {
    
    .outer-wrap {
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-flex-direction: column;
            -ms-flex-direction: column;
                flex-direction: column;
    }
    
    .content {
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
    }
    
    .main-area {
        -webkit-flex: 1 1 auto;
            -ms-flex: 1 1 auto;
                flex: 1 1 auto;
        -webkit-order: 1;
            -ms-flex-order: 1;
                order: 1;
    }
    
    .result-content {
        max-width: 60em;
        margin: 0 auto;
    }
    
    .sidebar {
        -webkit-flex: 0 0 12em;
            -ms-flex: 0 0 12em;
                flex: 0 0 12em;
        -webkit-order: 0;
            -ms-flex-order: 0;
                order: 0;
        transition: padding .5s ease, -webkit-flex .5s ease, color .2s ease-in .3s;
        transition: padding .5s ease, -ms-flex .5s ease, color .2s ease-in .3s;
        transition: padding .5s ease, flex .5s ease, color .2s ease-in .3s;
    }
    
    .sidebar-right {
        -webkit-order: 2;
            -ms-flex-order: 2;
                order: 2;
    }
    
    .no-sidebar {
        -webkit-flex-direction: column;
            -ms-flex-direction: column;
                flex-direction: column;
    }
    
	.hide {
        -webkit-flex: 0 0 0;
            -ms-flex: 0 0 0;
                flex: 0 0 0;
		padding: 0;
        color: hsla(0, 0%, 0%, 0);
        transition: color .2s ease, -webkit-flex .5s ease .3s, padding .5s ease .3s;
        transition: color .2s ease, -ms-flex .5s ease .3s, padding .5s ease .3s;
        transition: color .2s ease, flex .5s ease .3s, padding .5s ease .3s;
	}
    
    .hide a {
        color: hsla(0, 0%, 0%, 0);
    }

}


/* tabs with css3 */

/* Tabbed example */
div.tabs {
  margin-left: 2em;
  min-height: 18em;		/* No height: can grow if :target doesn't work */
  position: relative;	/* Establish a containing block */
  line-height: 1;		/* Easier to calculate with */
  z-index: 0}			/* So that we can put other things behind */
div.tabs > div {
    overflow-x: scroll;
    overflow-y: scroll;
  display: inline}		/* We want the buttons all on one line */
div.tabs > div > a {
  color: black;			/* Looks more like a button than a link */
  background: #DDD;		/* Active tabs are light gray */
  padding: 0.2em;		/* Some breathing space */
  border: 0.1em outset #CCC;	    /* Make it look like a button */
  border-bottom: 0.1em solid #DDD} /* Visually connect tab and tab body */

div.tabs > div:not(:target) > a {
  border-bottom: none;		/* Make the bottom border disappear */
  background: #AAA}		    /* Inactive tabs are dark gray */
div.tabs > div:target > a,	/* Apply to the targeted item or... */
:target #tab-1 > a {		/* ... to the default item */
  border-bottom: 0.1em solid #DDD; /* Visually connect tab and tab body */
  background: #DDD}		/* Active tab is light gray */
div.tabs > div > div {
  background: #DDD;		/* Light gray */
  z-index: -2;			/* Behind, because the borders overlap */
  left: 0; top: 1.3em;		/* The top needs some calculation... */
  bottom: 0; right: 0;		/* Other sides flush with containing block */
  overflow: auto;		/* Scroll bar if needed */
  padding: 0.3em;		/* Looks better */
  border: 0.1em outset #CCC}	/* 3D look */
div.tabs > div:not(:target) > div { /* Protect CSS1 & CSS2 browsers */
  position: absolute }		/* All these DIVs overlap */
div.tabs > div:target > div, :target #tab-1 > div {
  position: absolute;		/* All these DIVs overlap */
  z-index: -1}			/* Raise it above the others */

div.tabs :target {
  outline: none}

/* drop down selectors */
select {
    display: inline-block;
}